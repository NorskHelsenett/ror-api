name: Test and build API

on:
  pull_request:
    branches:
      - main
env:
  APP: ror-api
  APP_PATH: cmd/api
jobs:
  helm-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.17.0

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.12.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}

  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"
      - name: run generator 
        run: |
          go run cmd/generator/main.go
      - name: Test
        run: |
          echo testing...
          export sha_short=$(git rev-parse --short HEAD)
          go get -t ./...
          go vet ./...
          go test -v ./...
      - name: Build Swagger
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -g cmd/api/main.go --parseDependency --output internal/docs --parseInternal
      - name: Build
        run: |
          echo building...
          export sha_short=$(git rev-parse --short HEAD)
          export LIB_VER=$(cat go.mod | grep "github.com/NorskHelsenett/ror " | cut -d' ' -f2)
          go get ./...
          mkdir -p dist/isbuilt
          CGO_ENABLED=0 go build -o dist/${{ env.APP }} -ldflags "-w -extldflags '-static' -X github.com/NorskHelsenett/ror/pkg/config/rorversion.Version=$ROR_VERSION -X github.com/NorskHelsenett/ror/pkg/config/rorversion.Commit=$sha_short -X github.com/NorskHelsenett/ror/pkg/config/rorversion.LibVer=$LIB_VER" ${{ env.APP_PATH }}/main.go
        env:
          ROR_VERSION: v0.0.1-build